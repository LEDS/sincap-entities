EntrevistaValida.message = Dados da entrevista est\u00E3o inv\u00E1lidos
EntrevistaValida.processoSemId = Processo sem ID
EntrevistaValida.problemasEstruturais = Causa da entrevista n\u00E3o ter sido realizada n\u00E3o informada
EntrevistaValida.recusaFamiliar = Causa de recusa familiar n\u00E3o informada
EntrevistaValida.dataEntrevista = Data entrevista est\u00E1 preenchida
EntrevistaValida.responsavel1 = Campo respons\u00E1vel 1 est\u00E1 preenchido
EntrevistaValida.responsavel2 = Campo respons\u00E1vel 2 est\u00E1 preenchido
EntrevistaValida.testemunha1 = Campo testemunha 1 est\u00E1 preenchido
EntrevistaValida.testemunha2 = Campo testemunha 2 est\u00E1 preenchido
EntrevistaValida.autorizada.responsavel1 = Dados do respons\u00E1vel 1 n\u00E3o preenchidos
EntrevistaValida.autorizada.responsavel2 = Campo respons\u00E1vel 2 n\u00E3o est\u00E1 preenchido
EntrevistaValida.autorizada.testemunha1 = Dados da testemunha 1 n\u00E3o preenchidos
EntrevistaValida.autorizada.testemunha2 = Dados da testemunha 2 n\u00E3o preenchidos
EntrevistaValida.semDadosPaciente = Entrevista realizada sem os dados do paciente
EntrevistaValida.causaNaoDoacaoExiste = Causa de n\u00E3o doa\u00E7\u00E3o est\u00E1 definida mesmo com doa\u00E7\u00E3o autorizada
EntrevistaValida.menorDeIdade = Paciente menor de idade precisa de dois respons\u00E1veis

br.ifes.leds.sincap.validacao.annotations.DatasPacienteConsistentes.message = Data de interna\u00E7\u00E3o deve ser depois da data de nascimento
br.ifes.leds.sincap.validacao.annotations.DatasObitoConsistentes.message = Data de \u00F3bito deve ser depois da data de interna\u00E7\u00E3o
br.ifes.leds.sincap.validacao.annotations.TelefoneFuncionarioConsistentes.message = Telefone n\u00E3o pode estar vazio
br.ifes.leds.sincap.validacao.annotations.TelefoneResponsavelConsistentes.message = Os telefones devem ser diferentes
br.ifes.leds.sincap.validacao.annotations.DataEntrevistaObitoConsistentes.message = Data de entrevista deve ser depois ou no mesmo dia do \u00F3bito

javax.validation.constraints.AssertFalse.message = Deve ser falso
javax.validation.constraints.AssertTrue.message  = Deve ser verdadeiro
javax.validation.constraints.DecimalMax.message  = Deve ser menor ou igual a {value}
javax.validation.constraints.DecimalMin.message  = Deve ser maior ou igual a {value}
javax.validation.constraints.Digits.message      = Valor num\u00E9rico fora do limite (<{integer} d\u00EDgitos>.<{fraction} d\u00EDgitos> esperado)
javax.validation.constraints.Future.message      = Deve estar no futuro
javax.validation.constraints.Max.message         = Deve ser menor ou igual a {value}
javax.validation.constraints.Min.message         = Deve ser maior ou igual a {value}
javax.validation.constraints.NotNull.message     = N\u00E3o pode ser nulo
javax.validation.constraints.Null.message        = Deve ser nulo
javax.validation.constraints.Past.message        = Deve estar no passado
javax.validation.constraints.Pattern.message     = Deve corresponder \u00E0 "{regexp}"
javax.validation.constraints.Size.message        = Tamanho deve estar entre {min} e {max}

org.hibernate.validator.constraints.CreditCardNumber.message    = N\u00FAmero de Cart\u00E3o de Cr\u00E9dito inv\u00E1lido
org.hibernate.validator.constraints.Email.message               = N\u00E3o \u00E9 um endere\u00E7o de e-mail
org.hibernate.validator.constraints.Length.message              = Tamanho deve estar entre {min} e {max}
org.hibernate.validator.constraints.LuhnCheck.message           = Digito verificador para ${value} \u00E9 inv\u00E1lido, verifica\u00E7\u00E3o M\u00F3dulo 10 de Luhn falhou
org.hibernate.validator.constraints.Mod10Check.message          = Digito verificador para ${value} \u00E9 inv\u00E1lido, verifica\u00E7\u00E3o M\u00F3dulo 10 falhou
org.hibernate.validator.constraints.Mod11Check.message          = Digito verificador para ${value} \u00E9 inv\u00E1lido, verifica\u00E7\u00E3o M\u00F3dulo 10 falhou
org.hibernate.validator.constraints.ModCheck.message            = Digito verificador para ${value} \u00E9 inv\u00E1lido, verifica\u00E7\u00E3o ${modType} falhou
org.hibernate.validator.constraints.NotBlank.message            = N\u00E3o pode estar em branco
org.hibernate.validator.constraints.NotEmpty.message            = N\u00E3o pode estar vazio
org.hibernate.validator.constraints.Range.message               = O valor precisa estar entre {min} e {max}
org.hibernate.validator.constraints.SafeHtml.message            = Pode ter conte\u00FAdo inseguro no html
org.hibernate.validator.constraints.ScriptAssert.message        = Express\u00E3o de script "{script}" n\u00E3o retornou verdadeiro
org.hibernate.validator.constraints.URL.message                 = Deve ser uma URL v\u00E1lida
org.hibernate.validator.constraints.br.CNPJ.message             = CNPJ inv\u00E1lido
org.hibernate.validator.constraints.br.CPF.message              = CPF inv\u00E1lido
org.hibernate.validator.constraints.br.TituloEleitoral.message  = T\u00EDtulo Eleitoral inv\u00E1lido
